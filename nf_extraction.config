/*
 * All strings should be enclosed in quotes (single or double is fine).
 * Description comments preceed the variable they refer to declaration.
 * If you wish to leave a variable empty, it's best practice to include either an empty string ("")
 * or an empty list ([]) as appropriate. Otherwise the variable may take on the value of the variable 
 * succeeding it. 
 */

params {

    // ////////////////////////////////////////////////////
    // /* --          bcl2fastq                       -- */
    // ////////////////////////////////////////////////////

    // Path on sblab to run directory holding bcl files
    run_dir = "/yerkes-cifs/runs/2023_runs/230331_A00945_0322_BHNVHYDRX2" 
    
    // Separate multiple email addresses by commas if desired
    emails = ""
    
    /* 
     * Optional: manually specify sample sheets to use and output labels
     * if sample sheets are specified here, there should be a label too
     * E.g. sample_sheets = ["230331-B_p23063-demux.csv": "second_extraction",
     *                       "230331-B_p23063-demux-original.csv": "original_extraction"]
     * The script can run without specifications, in which case it will use all *demux*.csv 
     * files as sample sheets and assign random numbers to the output folders
     * E.g. sample_sheets = []
     */
    sample_sheets = ["230331-B_p23063-demux.csv": "testrun"]

    // ////////////////////////////////////////////////////
    // /* --          RESOURCE USE                    -- */
    // ////////////////////////////////////////////////////

    // delay workflow start in case you want to save resources. In hours
    delay_start = 0
    
    // maximum time to wait for RTAComplete file to appear (calculated after delay_start). In hours
    max_wait = 72
    
    // How often to check for RTAComplete file. In minutes
    wait_interval = 10
    
    // Remove temporary working direcotries on successful completeion (failed runs will not be deleted and can be resumed)
    cleanup = true
    
    // Maximum concurrent processes of bcl2fastq
    maxForks = 1
    
    // Compression level of fastq outputs, from 1-9. 4 is default
    compression = 4
    
    // Option to turn of md5sums if it's not needed, it can be slow
    compute_md5sums = true


    // ////////////////////////////////////////////////////
    // /* --   development, don't worry about these   -- */
    // ////////////////////////////////////////////////////
/*
    run_name = "extractions_test_PE"
    //bcl extraction
    perform_extraction = true
    perform_bcl_S3_sync = false
    perform_fastq_s3_sync = false
    out_dir = "/yerkes-cifs/runs/tools/automation/extractions/test_pe/fastqs"
    //where fastqs will be extracted (if extracting), and read from (if aligning)
    fastq_dir ="/yerkes-cifs/runs/tools/automation/extractions/test_pe/fastqs"
    //alignment
    align_outdir = "/yerkes-cifs/runs/tools/automation/extractions/test_pe/alignments"
    perform_alignment = false    
    quantMode = "GeneCounts"
    create_project_repo = false
    alignment_references = [
        "p22208_Adam-220809M":'/yerkes-cifs/runs/Genome_references/homo_sapiens/GRCh38/ensembl_104/star_index_2.7.9a/'
    ]
    alignment_star_versions = [
        "p22208_Adam-220809M":'/yerkes-cifs/runs/tools/STAR/STAR-2.7.9a/bin/Linux_x86_64/STAR'
    ]
    alignment_prefix = [
        "p22208_Adam-220809M":'p22208_Adam_STAR2.7.9_homo_sapiens_GRCh38_ensembl104'
    ]
    */
}

// Docker
// https://www.nextflow.io/docs/latest/container.html#container-docker
// process.container = 'nextflow/examples:latest'
docker {
    enabled = false
}

// plugins {
//     id = 'nf-amazon'
// }

// AWS
//aws {
//    accessKey = 'ASIATC4IJWHOVKNVEWN7'
//    secretKey = 'C63wY5bjnG9kdXJ1fNSV/tnZFidEsQLk831uXUd7'
//    region = 'us-east-1a'
//}

